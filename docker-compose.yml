version: '3.7'

services:
  rabbitmq:
    image: 'rabbitmq:3.9.13-management-alpine'
    container_name: "rabbitmq"
    restart: always
    environment:
      - "RABBITMQ_DEFAULT_PASS=password"
      - "RABBITMQ_DEFAULT_USER=username"
      - "RABBITMQ_HOST=rabbitmq"
    ports:
      - '15672:15672'
      - '5672:5672'
    expose:
       - '15672:15672'
       - '5672:5672'
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5432:5432"
  mongo:
    container_name: mongo
    image: bitnami/mongodb:latest
    restart: always
    ports:
      - '27017:27017'
    command: mongod --port 27017
    volumes: 
      - mongodb-cache:/data
  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - '6379:6379'
    volumes: 
      - redis-cache:/data
  grpc-command:
    container_name: grpc-command
    restart: always
    build:
      context: ./grpc-command
      dockerfile: Dockerfile
      target: grpc-command
    environment:
      - PORT=50051
      - HOST=grpc-command
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    expose:
      - '50051'
    links:
      - mongo
    ports:
      - '50051:50051'
    depends_on:
      - mongo
    command: npm run start
  grpc-query:
    container_name: grpc-query
    restart: always
    build:
      context: ./grpc-query
      dockerfile: Dockerfile
      target: grpc-query
    environment:
      - PORT=50052
      - HOST=grpc-query
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    expose:
      - '50052'
    links:
      - redis
    ports:
      - '50052:50052'
    depends_on:
      - redis
    command: npm run start
  api:
    container_name: api
    restart: always
    build:
      context: ./api
      dockerfile: Dockerfile
      target: api
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=3000
      - GRPC_COMMAND_HOST=grpc-command
      - GRPC_QUERY_HOST=grpc-query
      - RABBITMQ_HOST=rabbitmq
    expose:
      - '3000'
    links:
      - mongo
      - rabbitmq
      - redis
    ports:
      - '3000:3000'
    depends_on:
       - mongo
       - rabbitmq
       - redis
    command: npm run start
volumes:
  redis-cache:
    driver: local
  mongodb-cache:
    driver: local